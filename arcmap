#!/usr/bin/env ruby

POOL = ARGV[0] ? ARGV[0] : 'vz'

`zpool status #{POOL} > /dev/null 2>&1`

unless $?.exitstatus == 0
  STDERR.puts "Pool #{POOL} not found."
  exit 1
end

dsmap = {}
arcmap = {}

STDERR.puts "zdb #{POOL} -d -P"
IO.popen "zdb #{POOL} -d -P", 'r' do |f|
  f.gets
  until f.eof? do
    a = f.gets.gsub(/, /, ' ').strip.split(/\s+/)
    dsmap[a[4].to_i] = a[1]
  end
end

STDERR.puts "parsing /proc/spl/kstat/zfs/dbufs"
File.open('/proc/spl/kstat/zfs/dbufs') do |f|
  3.times do
    f.gets
  end

  until f.eof? do
    a = f.gets.strip.split(/\s+/)
    arcmap[a[1].to_i] ||= 0
    arcmap[a[1].to_i] += a[6].to_i
  end
end

STDERR.puts "mapping dbufs to datasets"
dsmap.sort_by {|i, name| name }.each do |i,name|
  arcmap[i] ||= 0
  printf "%-50s %10sM\n", name, (arcmap[i] / 1024 / 1024).round
end
